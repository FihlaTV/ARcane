/*
 * Copyright (c) 2017 ARcane Developers
 *
 * This file is a part of ARcane. Please read the license text that
 * comes with the source code for use conditions.
 */
.wrapper {
    pointer-events: none;
}

.displayModeList {
    position: absolute;
    left: 0; top: 0; right: 0;
    height: 100px;
    text-align: center;

    background: linear-gradient(to bottom,
        rgba(0, 0, 0, 0.4),
        rgba(0, 0, 0, 0.15),
        rgba(0, 0, 0, 0.0));

    > li {
        display: inline;
    }
    > li > input {
        display: none;
        & + label {
            pointer-events: initial;

            display: inline-block;
            position: relative;
            width: 100px;
            cursor: pointer;
            padding: 15px;
            color: rgba(255, 255, 255, 0.8);
            text-shadow: 0px 0px 4px rgba(0, 0, 0, 0.2);
            font-size: 14px;
            font-weight: 600;
            text-transform: uppercase;

            transition: 200ms color;

            &:hover {
                color: rgba(255, 255, 255, 1);
            }
            &:before {
                content: "";
                position: absolute;
                left: 0; top: 0; width: 100%; height: 4px;
                background: yellow;
                transform-origin: 50% 0%;
                transform: scale(0, 1);
                transition: 200ms transform;
                box-shadow:
                    0 0 5px rgba(255,255,0,0.4),
                    0 0 20px rgba(255,255,0, 0.15);
            }
            & > span {
                transition: 200ms transform;
                display: inline-block;
            }
        }
        &:checked + label {
            color: yellow;

            &:before {
                transform: scale(1, 1);
            }
            & > span {
                transform: scale(1.1);
            }
        }
    }
}

.toolbar {
    position: absolute;
    top: 15px; right: 15px;
    right: constant(safe-area-inset-right);
    height: ~"calc(60% - 30px)";
    /* iOS 11.2 and later */
    @supports(right: max(0px)) { right: ~"max(15px, constant(safe-area-inset-right))" }

    display: flex;
    flex-direction: column;
    justify-content: flex-end;

    > input { display: none; }

    // Buttons
    > button, > label {
        box-sizing: border-box;
        width: 30px; height: 30px;
        background: rgba(255, 255, 255, 0.8);
        border-radius: 50%;
        border: none;
        padding: 0;
        margin: 5px 0;
        position: relative;
        pointer-events: initial;
        cursor: pointer;
        color: #262626;
        > span {
            position: absolute;
            will-change: filter;
            left: 0; top: 0; width: 100%; height: 100%;
        }
    }

    // Popup buttons
    > label {
        &:before {
            content: "";
            display: block;
            position: absolute;
            left: -11px; top: ~"calc(50% - 4px)";
            width: 0; height: 0;
            border: 4px solid;
            border-color: transparent;
            border-right: 4px solid rgba(230, 230, 230, 0.8);
        }
    }

    // Popup wrappers
    > div {
        position: relative;
    }

    // Active buttons
    > input:checked + label {
        background: #5080f0;
        > span {
            filter: brightness(1000%);
        }
        &:before {
            border-right-color: #5080f0;
        }
    }

    // Color selection
    > label > i {
        display: block;
        box-sizing: border-box;
        width: 24px; height: 24px;
        border: 2px solid black;
        border-radius: 50%;
        position: absolute;
        left: 3px; top: 3px;
        will-change: background-color;
    }
    > input:checked + label > i {
        border-color: white;
    }
}

.toolbarRoughness > span {
    background: data-uri('image/svg+xml;base64', '../../images/toolbar_roughness.svg') 50% 50% no-repeat;

    // Arc (representing the current value of roughness)
    > div {
        width: 24px; height: 24px; position: absolute;
        left: 3px; top: 3px;
        &:before {
            content: "";
            display: block;
            position: absolute;
            left: 0; top: 0; right: 0; bottom: 0;
            border: 2px solid #262626;
            opacity: 0.2;
            border-radius: 50%;
        }
        i {
            border: 2px solid #262626;
            border-right: none;
            background: transparent;
        }
    }
}

.toolbarMaterial > span {
    background: 50% 50% no-repeat;
    &.toolbarMaterialDielectric {
        background-image: data-uri('image/svg+xml;base64', '../../images/toolbar_material_dielectric.svg');
    }
    &.toolbarMaterialMetal {
        background-image: data-uri('image/svg+xml;base64', '../../images/toolbar_material_metal.svg');
    }
}

.colorPopup, .roughnessPopup, .materialPopup {
    > div {
        position: absolute;
        right: 50px;
        top: -20px;
        transform: translate(0, -50%);
        z-index: 10;

        background: rgba(230, 230, 230, 0.8);
        border-radius: 10px;
        padding: 10px;

        color: #262626;

        &:before {
            content: "";
            display: block;
            position: absolute;
            right: -16px; top: ~"calc(50% - 8px)";
            width: 0; height: 0;
            border: 8px solid;
            border-color: transparent;
            border-left: 8px solid rgba(230, 230, 230, 0.8);
        }

        pointer-events: initial;
        transition: 200ms opacity;
        opacity: 0;
        &:global(.act) {
            opacity: 1;
        }
    }
}

.roughnessPopup {
    > div {
        display: flex;
        align-items: center;
        padding-left: 18px;
    }
    > div > div {
        overflow: hidden;
        width: 150px;
    }
}

.materialPopup {
    ul {
        white-space: nowrap;
    }
}

.mouseHelp {
    position: absolute;
    bottom: 15px; right: 15px;
    right: constant(safe-area-inset-right);
    /* iOS 11.2 and later */
    @supports(right: max(0px)) { right: ~"max(15px, constant(safe-area-inset-right))" }
    opacity: 0;
    transition: 200ms opacity;
    text-shadow: 0px 0px 4px rgba(0, 0, 0, 0.3);

    &.visible {
        opacity: 0.9;
    }

    td, th {
        padding: 4px;
    }
    th {
        text-align: left;
        padding-right: 10px;
    }
}